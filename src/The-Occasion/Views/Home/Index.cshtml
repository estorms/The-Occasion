@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@using Microsoft.AspNetCore.Identity 

@model The_Occasion.Models.HomeViewModels.HomeViewModel
@{
    ViewData["Title"] = "Welcome to The Occasion";
}

<div class="FindAPoem text-center homebutton">
    <a class="btn btn-danger" id="findButton">Find a Poem</a>
</div>

<div class="form-group hidden findselect" id="formselect">

@*<div class="form-group hidden findselect" id="allqualfiers">
    <div class="col-md-10">
        @Html.DropDownList("AllQualifiers", @Model.AllQualifiers)
    </div>
</div>*@
    <div class="col-md-10">
        @Html.DropDownList("Forms.FormId", @Model.FormId)
    </div>
</div>

<div class="form-group hidden findselect" id="moodselect">
    <div class="col-md-10">
        @Html.DropDownList("Moods.MoodId", @Model.MoodId)
    </div>
</div>


<div class="form-group hidden findselect" id="topicselect">
    <div class="col-md-10">
        @Html.DropDownList("Topics.TopicId", @Model.TopicId)
    </div>
</div>
@if (@UserManager.GetUserName(User) != null)
{

<div class="WhatHaveIDone text-center homebutton">
    <a class="btn btn-danger" asp-controller="Poem" asp-action="MyPoems" id="myPoems">What Have I Done?</a>
</div>
<div class="boredButton text-center homebutton">
    <a class="btn btn-danger" id="bored">I'm Paralyzed by Ennui</a>
</div>
<div class="CurateView text-center homebutton">
    <a class="btn btn-danger" id="curateview">I'm Feeling Picky</a>
</div>

<div class="MakeAPoem text-center homebutton">
    <a class="btn btn-danger" asp-controller="Poem" asp-action="MySonnet" id="makePoem">Generate a Sonnet</a>
</div>

<div class="MakeAPoem text-center homebutton">
    <a class="btn btn-danger" asp-controller="Poem" asp-action="MyHaiku" id="makeHaiku">Generate a Haiku</a>
</div>
}
<div id="hereBePoems"></div>