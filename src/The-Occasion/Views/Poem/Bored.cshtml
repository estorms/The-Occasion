@model The_Occasion.Models.PoemViewModels.SinglePoemViewModel
@using Microsoft.AspNetCore.Identity
@using The_Occasion.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "Ontological Resolution (for Now)";
}

<div class="row poemRow top-buffer">
@*<h2>@Html.DisplayFor(model => model.Poem.Title)</h2>
@if (@UserManager.GetUserName(User) != null)
{
    <h3>
        Hello, @UserManager.GetUserName(User)!
    </h3>
}
else
{
    <h4>Login, please.</h4>
}*@
</div>
<div class="row">
    <div class="favorite text-center">
        <div class="col-md-3"><button id="SaveBored" value="@Model.Poem.PoemId">Save to My Profile</button></div>
        <div class="col-md-3"><button id="DeleteBored" value="@Model.Poem.PoemId" class="hidden">Delete From My Profile</button></div>
        
    </div>
    <div class="col-md-3 author">@Html.DisplayFor(model => model.Poem.Author)</div>
    <div class="col-md-3">@Html.DisplayFor(model => model.Poem.Title)</div>
</div>
<div class="row">
    @foreach (var line in Model.LinesArray)
    {
        <div class="col-md-12">@line</div>
    }
</div>



