@model The_Occasion.Models.PoemViewModels.SinglePoemViewModel
@using Microsoft.AspNetCore.Identity
@using The_Occasion.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "The Occasion";
}

@*<form asp-action="UpdatePoem">*@
<div class="row poemRow singlePoem">

    <input class="form-control hidden" value="@Model.Poem.PoemId" id="poemId"/>
    <div class = "hidden">@Model.Poem.PoemId</div>
    <div class="hidden" value="@Model.UserSelection.UserSelectionId" id="userSelectionId" /></div>
    <h3 class="title">@Html.DisplayFor(model => model.Poem.Title)</h3>
     @*<input class="form-control hidden edit-title-input" placeholder="Edit the Title" id="edit-title-input"><button class="btn-xs edit-title">Edit</button>*@

    @foreach (var line in Model.LinesArray)
    {
      <div class="col-lg-12 lines"><input class="form-control hidden" id="linesDiv" value="@line" />
         @line
    @if (Model.Poem.Author == Model.UserFullName && Model.Poem.FormId != 118)
    {
            <input class="form-control hidden edit-input" placeholder="Edit this line" id="edit-input"><button class="btn-xs edit">Edit</button>
    }
        else
        {
        <span></span>
        }
    </div>
    }
    <div class="col-md-12 author lines top-buffer">@Html.DisplayFor(model => model.Poem.Author)</div>
@*</form>*@ 

    @if (Model.Author != null)
    {



        <div class="col-md-12 lines top-buffer small-font">@Html.DisplayFor(model => model.Author.Bio)</div>
    }

    @if (Model.OtherWorks.Count == 0)
    {
        <div class="col-lg-12 small-font">No Other Works By this Poet Appear in The Database</div>
    }

    else
    {
        <div class="col-lg-12 lines top-buffer">Other Works By This Author</div>
    }

        @foreach (var poem in Model.OtherWorks)
        {
            <div class="col-lg-12 lines small-font"><a asp-controller="Poem" asp-action="Poem" asp-route-id="@poem.PoemId">@Html.DisplayFor(modelItem => poem.Title)</a></div>
        }

    @if (UserManager.GetUserName(User) != null)
    {
        @*<div class="col-md-3 top-buffer"><button id="Save" value="@Model.Poem.PoemId" class="btn btn-danger">Save to My Profile</button></div>*@
        <div class="col-md-3"><button id="Delete" value="@Model.UserSelection.UserSelectionId" class="btn btn-danger">Delete From My Profile</button></div>
      @if (Model.Poem.Author == Model.UserFullName && Model.Poem.FormId != 118)
      {
    <div class="col-md-3"><a class="btn btn-danger" id ="update">Update</a></div>
      }
      else
      {
          <span></span>

      }
        <div class="col-md-3 top-buffer hidden" id="SavedAgain">Your poem has been saved (again).</div>
        <div class="col-md-3"><button id="Save" value="@Model.Poem.PoemId" class="hidden btn btn-danger">Eh, Maybe I Do Want It. Save It Again, Please.</button></div>
        <div class="col-md-3 bottom-buffer hidden" id="GoHome3"><a class="btn btn-danger" asp-controller="Home" asp-action="Index">Take Me Home</a></div>
    }
    else
    {
        @*<div class="row poemRow">*@
        <div class="col-md-12">
            @*<div style="margin-top: 10px;">*@
            <a asp-controller="Account" asp-action="Register">Register</a><span> or </span>
            <a asp-controller="Account" asp-action="Login">Login</a><span> to Save This Poem to Your Account</span>
        </div>
                @*</div>*@
                @*</div>*@
    }
 


   

