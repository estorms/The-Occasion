@model The_Occasion.Models.PoemViewModels.SinglePoemViewModel
@using Microsoft.AspNetCore.Identity
@using The_Occasion.Models
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@{
    ViewData["Title"] = "The Occasion";
}

<h3>@Html.DisplayFor(model => model.Poem.Title)</h3>

<div class="row poemRow">
    <div class="favorite text-center">
    <div class="col-md-12 author">@Html.DisplayFor(model => model.Poem.Author)</div>
<div class="col-md-12">@Html.DisplayFor(model => model.Author.Bio)</div> 
    </div>
        <div class="row">
             @foreach (var line in Model.LinesArray)
             {
                <div class="col-md-12">@line</div>
             }       

</div>
        @if (UserManager.GetUserName(User) != null)
        {
        <div class="col-md-3"><button id="Save" value="@Model.Poem.PoemId">Save to My Profile</button></div>
        <div class="col-md-3"><button id="Delete" value="@Model.Poem.PoemId" class="hidden">Delete From My Profile</button></div>
        }
        else
        {
            <div class="row">
            <div class="col-md-12">
                <div style="margin-top: 10px;">
            <a asp-controller="Account" asp-action="Register">Register</a><span> or </span> 
                <a asp-controller="Account" asp-action="Login">Login</a><span> to Save This Poem to Your Account</span> 
                </div>
            </div>
            </div>
        }
    </div>
    